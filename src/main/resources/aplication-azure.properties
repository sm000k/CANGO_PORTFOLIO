## H2 Database Configuration
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=update

# H2 Console Configuration
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# Konfiguracja PostgreSQL
#spring.datasource.url=jdbc:postgresql://37.27.196.246:5432/cango-db
#spring.datasource.username=postgres
#spring.datasource.password=Sharan1.8T
#spring.datasource.driver-class-name=org.postgresql.Driver
#
## JPA / Hibernate
#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.hibernate.ddl-auto=update

# Konfiguracja serwera aplikacji
server.port=${PORT:8080}

# Pooling dla lepszej wydajno?ci
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.pool-name=HikariCP
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.max-lifetime=1800000



## DZIA?A?O ALE WOLNO
#spring.datasource.url=jdbc:postgresql://aws-0-eu-central-1.pooler.supabase.com:5432/postgres
#spring.datasource.username=postgres.ihzofefrlaneedxldiqr
#spring.datasource.password=Sharan1.8T
#spring.datasource.driver-class-name=org.postgresql.Driver
#
#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.hibernate.ddl-auto=update
#
#server.port=${PORT:8080}

